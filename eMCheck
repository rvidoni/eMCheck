#!/bin/sh 
# eMCheck - encrypt Mail Checker 
#
# Copyright (c) 2020, Renzo Vidoni - Reva Digital Solutions Ltd.
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 
# 3. Neither the name of author nor the names of its contributors may be
#    used to endorse or promote products derived from this software
#    without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# ------------------------------------------------------------------- #
# Version: 6.2 - rev.: 0 - FOD - May 22 2020 - Public 01
# Version: 6.3 - rev.: 0 - FO  - Jun 19 2020 - modification: data to fetchmail
# Version: 6.3 - rev.: 1 - FOD - Jun 20 2020 - code revision
# ------------------------------------------------------------------- #


export SLEEPSEC=1000	# [1] eMCheck time interval in seconds 


  mkdir -p "$MCPATH"/reports  ;  cd  "$MCPATH"/reports || exit 

  openssl aes-256-ctr -k PASSWORD -d -md sha256  <> "$(ls | tail -n 1)" | awk '{ print $1; }'  >  /tmp/.old

  sed s/^[0-9]*/0/  /tmp/.old  >  /tmp/.session


while true ; do
	
      	ping  -c 1 dns.quad9.net > /dev/null  2>&1	# [2] check connectivity and DNS

	if  [  "$?" -eq 0  ]   ;  then

		openssl aes-256-ctr -k PASSWORD -d -md sha256 <>  "$MCPATH"/eMCdata.esh  | fetchmail -c -f - | sed 's/fetchmail: No mail/0 messages/' |  awk '{ print $1,$2,$3,$4; }' | openssl aes-256-ctr -k PASSWORD -md sha256  > "$MCPATH"/reports/"$(date +%s)"



		clear  
		printf "* -------------------------- - ----------------------\n"
		printf "* -------------------------- \033[1;31m- eMCheck -\033[m ------------------ \n"
		printf "* -------------------------- - ----------------------------------- \n"
		echo '| Start '  "#" '|' 'Now' '#' '|' 'In' "#" '|' 'All' 'mail' | column -t 
		printf "* ------------------------------------------------------------------------- \n"

		cd  "$MCPATH"/reports || exit 

		openssl aes-256-ctr -k PASSWORD -d -md sha256 <> "$(ls | tail -n 2 | sort -r | xargs | \
			awk '{print $1}')" > /tmp/.report1

		openssl aes-256-ctr -k PASSWORD -d -md sha256 <> "$(ls | tail -n 2 | sort -r | xargs | \
			awk '{print $2}')" > /tmp/.report2


		sdiff /tmp/.report1 /tmp/.report2  | sed 's/|//' | \
		awk ' { print "-","Now", $1 - $5 ,"mail","Inbox", $1 ,"mail for" , $4 ;  }' | sed 's/New 0/No new/' > /tmp/.new

		sdiff /tmp/.report2 /tmp/.report1  | sed 's/|//' | awk ' { print  $1 - $5 ;  }'   > /tmp/.lastss

		paste /tmp/.lastss  /tmp/.session | awk '{ print $2 - $1}'  >  /tmp/.ssnum 

		cat /tmp/.ssnum  > /tmp/.session

		paste /tmp/.old /tmp/.ssnum /tmp/.new | \
		awk ' !/Inbox 0/ { $2=($2<0)?0:$2 ; print "| Start", "\033[1;44m" $1 "\033[m" ,"|", "\033[1;33m"  $4, $5  "\033[m" , " | In ","\033[1;32m" $2 "\033[m" , "|",$7,"\033[1;35m"  $8 "\033[m", $9, $10, $11 ;}' | column -t

		(cd /tmp/ || exit ; rm -f .report* ;  rm -f .new ;  rm -f .lastss ;  rm -f  .ssnum)

		printf "* ------------------------------------------------------------------------- \n"

		printf "| \033[1;41m     $(date +%d\ %b\ %Y)     \033[m\033[1;44m     Last check $(date +%R)     \033[m"

		# [3] comment out for: FreeBSD and OpenBSD 
		printf "\033[1;41m     Next check $(date -r  "$(expr "$(date +%s)" + $SLEEPSEC)" +%R)    \033[m \n"
		# Debian # printf "\033[1;41m     Next check "$(date -d +$((SLEEPSEC))seconds +%R)"     \033[m \n"

		printf "* ------------------------------------------------------------------------- \n"

		(cd "$MCPATH"/reports/ || exit ; find "$MCPATH"/reports/ -maxdepth 1 -type f -empty -delete)
		
		(cd "$MCPATH"/reports/ || exit ; ls -t | tail -n +3 | xargs rm -- )

		cd  ||  exit

	else 

		echo "Sorry, no Network"
		# restart connection 
	fi
	

sleep "$SLEEPSEC"

done
